datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model IndividualIncomeTax {
  annualIncome  Float?
  createdAt     DateTime  @default(now())
  financialYear DateTime?
  id            String    @id @default(cuid())
  incomeType    String?
  taxPaid       Float?
  updatedAt     DateTime  @updatedAt
  user          User?     @relation(fields: [userId], references: [id])
  userId        String?
}

model BusinessIncomeTax {
  annualIncome  Float?
  businessName  String?
  businessType  String?
  createdAt     DateTime  @default(now())
  financialYear DateTime?
  id            String    @id @default(cuid())
  taxPaid       Float?
  updatedAt     DateTime  @updatedAt
  user          User?     @relation(fields: [userId], references: [id])
  userId        String?
}

model Tds {
  annualTurnover       Float?
  createdAt            DateTime  @default(now())
  financialYear        DateTime?
  id                   String    @id @default(cuid())
  taxDeducted          Float?
  tdsCertificateNumber String?
  updatedAt            DateTime  @updatedAt
  user                 User?     @relation(fields: [userId], references: [id])
  userId               String?
}

model Gst {
  annualTurnover Float?
  createdAt      DateTime  @default(now())
  financialYear  DateTime?
  gstNumber      String?
  id             String    @id @default(cuid())
  taxPaid        Float?
  updatedAt      DateTime  @updatedAt
  user           User?     @relation(fields: [userId], references: [id])
  userId         String?
}

model LegalCompliance {
  businessName   String?
  complianceDate DateTime?
  complianceType String?
  createdAt      DateTime  @default(now())
  id             String    @id @default(cuid())
  status         String?
  updatedAt      DateTime  @updatedAt
  user           User?     @relation(fields: [userId], references: [id])
  userId         String?
}

model User {
  businessIncomeTaxes   BusinessIncomeTax[]
  createdAt             DateTime              @default(now())
  email                 String?               @unique
  firstName             String?
  gsts                  Gst[]
  id                    String                @id @default(cuid())
  individualIncomeTaxes IndividualIncomeTax[]
  lastName              String?
  legalCompliances      LegalCompliance[]
  password              String
  roles                 Json
  tdsItems              Tds[]
  updatedAt             DateTime              @updatedAt
  username              String                @unique
}
