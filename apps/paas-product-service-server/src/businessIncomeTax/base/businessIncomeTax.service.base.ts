/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BusinessIncomeTax as PrismaBusinessIncomeTax,
  User as PrismaUser,
} from "@prisma/client";

export class BusinessIncomeTaxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BusinessIncomeTaxCountArgs, "select">
  ): Promise<number> {
    return this.prisma.businessIncomeTax.count(args);
  }

  async businessIncomeTaxes(
    args: Prisma.BusinessIncomeTaxFindManyArgs
  ): Promise<PrismaBusinessIncomeTax[]> {
    return this.prisma.businessIncomeTax.findMany(args);
  }
  async businessIncomeTax(
    args: Prisma.BusinessIncomeTaxFindUniqueArgs
  ): Promise<PrismaBusinessIncomeTax | null> {
    return this.prisma.businessIncomeTax.findUnique(args);
  }
  async createBusinessIncomeTax(
    args: Prisma.BusinessIncomeTaxCreateArgs
  ): Promise<PrismaBusinessIncomeTax> {
    return this.prisma.businessIncomeTax.create(args);
  }
  async updateBusinessIncomeTax(
    args: Prisma.BusinessIncomeTaxUpdateArgs
  ): Promise<PrismaBusinessIncomeTax> {
    return this.prisma.businessIncomeTax.update(args);
  }
  async deleteBusinessIncomeTax(
    args: Prisma.BusinessIncomeTaxDeleteArgs
  ): Promise<PrismaBusinessIncomeTax> {
    return this.prisma.businessIncomeTax.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.businessIncomeTax
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
