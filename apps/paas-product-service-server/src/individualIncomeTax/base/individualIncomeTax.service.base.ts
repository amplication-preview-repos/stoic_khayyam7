/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  IndividualIncomeTax as PrismaIndividualIncomeTax,
  User as PrismaUser,
} from "@prisma/client";

export class IndividualIncomeTaxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IndividualIncomeTaxCountArgs, "select">
  ): Promise<number> {
    return this.prisma.individualIncomeTax.count(args);
  }

  async individualIncomeTaxes(
    args: Prisma.IndividualIncomeTaxFindManyArgs
  ): Promise<PrismaIndividualIncomeTax[]> {
    return this.prisma.individualIncomeTax.findMany(args);
  }
  async individualIncomeTax(
    args: Prisma.IndividualIncomeTaxFindUniqueArgs
  ): Promise<PrismaIndividualIncomeTax | null> {
    return this.prisma.individualIncomeTax.findUnique(args);
  }
  async createIndividualIncomeTax(
    args: Prisma.IndividualIncomeTaxCreateArgs
  ): Promise<PrismaIndividualIncomeTax> {
    return this.prisma.individualIncomeTax.create(args);
  }
  async updateIndividualIncomeTax(
    args: Prisma.IndividualIncomeTaxUpdateArgs
  ): Promise<PrismaIndividualIncomeTax> {
    return this.prisma.individualIncomeTax.update(args);
  }
  async deleteIndividualIncomeTax(
    args: Prisma.IndividualIncomeTaxDeleteArgs
  ): Promise<PrismaIndividualIncomeTax> {
    return this.prisma.individualIncomeTax.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.individualIncomeTax
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
