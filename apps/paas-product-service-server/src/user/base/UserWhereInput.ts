/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusinessIncomeTaxListRelationFilter } from "../../businessIncomeTax/base/BusinessIncomeTaxListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { GstListRelationFilter } from "../../gst/base/GstListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { IndividualIncomeTaxListRelationFilter } from "../../individualIncomeTax/base/IndividualIncomeTaxListRelationFilter";
import { LegalComplianceListRelationFilter } from "../../legalCompliance/base/LegalComplianceListRelationFilter";
import { TdsListRelationFilter } from "../../tds/base/TdsListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => BusinessIncomeTaxListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BusinessIncomeTaxListRelationFilter)
  @IsOptional()
  @Field(() => BusinessIncomeTaxListRelationFilter, {
    nullable: true,
  })
  businessIncomeTaxes?: BusinessIncomeTaxListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GstListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GstListRelationFilter)
  @IsOptional()
  @Field(() => GstListRelationFilter, {
    nullable: true,
  })
  gsts?: GstListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => IndividualIncomeTaxListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IndividualIncomeTaxListRelationFilter)
  @IsOptional()
  @Field(() => IndividualIncomeTaxListRelationFilter, {
    nullable: true,
  })
  individualIncomeTaxes?: IndividualIncomeTaxListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LegalComplianceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LegalComplianceListRelationFilter)
  @IsOptional()
  @Field(() => LegalComplianceListRelationFilter, {
    nullable: true,
  })
  legalCompliances?: LegalComplianceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TdsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TdsListRelationFilter)
  @IsOptional()
  @Field(() => TdsListRelationFilter, {
    nullable: true,
  })
  tdsItems?: TdsListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
