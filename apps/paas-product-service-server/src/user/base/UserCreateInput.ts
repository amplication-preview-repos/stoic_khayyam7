/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusinessIncomeTaxCreateNestedManyWithoutUsersInput } from "./BusinessIncomeTaxCreateNestedManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { GstCreateNestedManyWithoutUsersInput } from "./GstCreateNestedManyWithoutUsersInput";
import { IndividualIncomeTaxCreateNestedManyWithoutUsersInput } from "./IndividualIncomeTaxCreateNestedManyWithoutUsersInput";
import { LegalComplianceCreateNestedManyWithoutUsersInput } from "./LegalComplianceCreateNestedManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TdsCreateNestedManyWithoutUsersInput } from "./TdsCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: () => BusinessIncomeTaxCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => BusinessIncomeTaxCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => BusinessIncomeTaxCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  businessIncomeTaxes?: BusinessIncomeTaxCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => GstCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => GstCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => GstCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  gsts?: GstCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => IndividualIncomeTaxCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => IndividualIncomeTaxCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => IndividualIncomeTaxCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  individualIncomeTaxes?: IndividualIncomeTaxCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LegalComplianceCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LegalComplianceCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LegalComplianceCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  legalCompliances?: LegalComplianceCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TdsCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TdsCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TdsCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  tdsItems?: TdsCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { UserCreateInput as UserCreateInput };
