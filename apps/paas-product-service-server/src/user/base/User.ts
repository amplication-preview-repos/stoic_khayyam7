/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BusinessIncomeTax } from "../../businessIncomeTax/base/BusinessIncomeTax";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Gst } from "../../gst/base/Gst";
import { IndividualIncomeTax } from "../../individualIncomeTax/base/IndividualIncomeTax";
import { LegalCompliance } from "../../legalCompliance/base/LegalCompliance";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Tds } from "../../tds/base/Tds";

@ObjectType()
class User {
  @ApiProperty({
    required: false,
    type: () => [BusinessIncomeTax],
  })
  @ValidateNested()
  @Type(() => BusinessIncomeTax)
  @IsOptional()
  businessIncomeTaxes?: Array<BusinessIncomeTax>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Gst],
  })
  @ValidateNested()
  @Type(() => Gst)
  @IsOptional()
  gsts?: Array<Gst>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [IndividualIncomeTax],
  })
  @ValidateNested()
  @Type(() => IndividualIncomeTax)
  @IsOptional()
  individualIncomeTaxes?: Array<IndividualIncomeTax>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [LegalCompliance],
  })
  @ValidateNested()
  @Type(() => LegalCompliance)
  @IsOptional()
  legalCompliances?: Array<LegalCompliance>;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [Tds],
  })
  @ValidateNested()
  @Type(() => Tds)
  @IsOptional()
  tdsItems?: Array<Tds>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { User as User };
